// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0

package sqlc

import (
	"context"

	"github.com/jackc/pgx/v5/pgtype"
)

type Querier interface {
	AllocateIPAddress(ctx context.Context, arg AllocateIPAddressParams) (IpAddress, error)
	AppendServerLifecycleLog(ctx context.Context, arg AppendServerLifecycleLogParams) ([]byte, error)
	// sql/ip_address.sql
	CreateIPAddress(ctx context.Context, address string) (IpAddress, error)
	// sql/servers.sql
	CreateNewServer(ctx context.Context, arg CreateNewServerParams) (Server, error)
	DeallocateIPAddress(ctx context.Context, id pgtype.UUID) (IpAddress, error)
	DeleteServer(ctx context.Context, id pgtype.UUID) error
	EnforceLifecycleLogsLimit(ctx context.Context, id pgtype.UUID) error
	GetAvailableIPForAllocation(ctx context.Context) (IpAddress, error)
	GetIPAddressByServerID(ctx context.Context, serverID pgtype.UUID) (IpAddress, error)
	GetServer(ctx context.Context, id pgtype.UUID) (Server, error)
	GetServerLifecycleLogs(ctx context.Context, id pgtype.UUID) ([]byte, error)
	ListServers(ctx context.Context, status string) ([]Server, error)
	SelectAllServers(ctx context.Context) ([]Server, error)
	TerminateAllServers(ctx context.Context) error
	TruncateIPAddresses(ctx context.Context) error
	TruncateServers(ctx context.Context) error
	UpdateServerStatus(ctx context.Context, arg UpdateServerStatusParams) (Server, error)
	UpdateServerUptime(ctx context.Context, arg UpdateServerUptimeParams) (Server, error)
}

var _ Querier = (*Queries)(nil)
