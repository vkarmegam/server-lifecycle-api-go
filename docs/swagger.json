{
    "swagger": "2.0",
    "info": {
        "description": "This is a virtual server management API built with Go, Chi, and PostgreSQL.\n\n\nto View Methods go to http://localhost:8080/metrics\n\nkarmegam vadivel\nhttps://github.com/vkarmegam\nhttps://www.linkedin.com/in/karmegamv",
        "title": "Virtual Server Management API",
        "contact": {},
        "version": "1.0"
    },
    "host": "localhost:8080",
    "basePath": "/",
    "paths": {
        "/healthz": {
            "get": {
                "description": "Checks if the application is alive and responding.",
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "Health"
                ],
                "summary": "Application Liveness Probe",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/readyz": {
            "get": {
                "description": "Checks if the application is ready to serve traffic, including dependencies like the database.",
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "Health"
                ],
                "summary": "Application Readiness Probe",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/server": {
            "post": {
                "description": "Provisions a new virtual server with specified details.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "server"
                ],
                "summary": "Provision a new virtual server",
                "parameters": [
                    {
                        "description": "Server provision request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/go-virtual-server_internal_models.ProvisionServerRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/go-virtual-server_internal_models.ServerResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/go-virtual-server_internal_util.ErrorResponse"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/go-virtual-server_internal_util.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/go-virtual-server_internal_util.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/servers": {
            "get": {
                "description": "Lists all virtual servers, filterable by region, status, type; supports pagination (limit, offset); sorted (newest first).",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "servers"
                ],
                "summary": "List all servers",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Filter by region",
                        "name": "region",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by status (e.g., provisioning, running, stopped, terminated, error)",
                        "name": "status",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by server type (e.g., t2.micro, m5.large)",
                        "name": "type",
                        "in": "query"
                    },
                    {
                        "maximum": 100,
                        "minimum": 1,
                        "type": "integer",
                        "default": 10,
                        "description": "Number of results to return (default 10, max 100)",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "minimum": 0,
                        "type": "integer",
                        "default": 0,
                        "description": "Number of results to skip",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/go-virtual-server_internal_models.ListServersResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/go-virtual-server_internal_util.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/go-virtual-server_internal_util.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/servers/{serverID}": {
            "get": {
                "description": "Retrieves full metadata for a specific virtual server, including live uptime and billing.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "servers"
                ],
                "summary": "Retrieve full metadata for a server",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID of the server",
                        "name": "serverID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/go-virtual-server_internal_models.ServerResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/go-virtual-server_internal_util.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/go-virtual-server_internal_util.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/go-virtual-server_internal_util.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/servers/{serverID}/action": {
            "post": {
                "description": "Performs actions like start, stop, reboot, terminate on a virtual server. Enforces valid FSM transitions.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "servers"
                ],
                "summary": "Perform an action on a server",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID of the server",
                        "name": "serverID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Action to perform (start, stop, reboot, terminate)",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/go-virtual-server_internal_models.ServerActionRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/go-virtual-server_internal_models.ServerResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/go-virtual-server_internal_util.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/go-virtual-server_internal_util.ErrorResponse"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/go-virtual-server_internal_util.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/go-virtual-server_internal_util.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/servers/{serverID}/logs": {
            "get": {
                "description": "Retrieves the last 100 lifecycle events for a specific virtual server.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "servers"
                ],
                "summary": "Return last 100 lifecycle events",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID of the server",
                        "name": "serverID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/go-virtual-server_internal_models.ServerLogsResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/go-virtual-server_internal_util.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/go-virtual-server_internal_util.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/go-virtual-server_internal_util.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "go-virtual-server_internal_models.BillingInfo": {
            "type": "object",
            "properties": {
                "billingModel": {
                    "description": "e.g., \"hourly\", \"monthly\", \"per_request\"",
                    "type": "string",
                    "example": "hourly"
                },
                "currencyUnit": {
                    "description": "e.g., \"USD\", \"EUR\", \"GBP\"",
                    "type": "string",
                    "example": "USD"
                },
                "estimatedCurrentCost": {
                    "description": "Estimated cost for the current (partial) billing cycle or total accumulated cost",
                    "type": "number",
                    "example": 0.01
                },
                "totalUptimeSeconds": {
                    "description": "Total cumulative active time for the server",
                    "type": "integer",
                    "example": 3600
                },
                "unitPrice": {
                    "description": "Price per unit (e.g., per hour, per request)",
                    "type": "number",
                    "example": 0.01
                },
                "updatedTime": {
                    "description": "Start of the current billing period",
                    "type": "string",
                    "example": "2023-10-27T09:00:00Z"
                }
            }
        },
        "go-virtual-server_internal_models.ListServersResponse": {
            "type": "object",
            "properties": {
                "limit": {
                    "type": "integer"
                },
                "offset": {
                    "type": "integer"
                },
                "servers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/go-virtual-server_internal_models.ServerResponse"
                    }
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "go-virtual-server_internal_models.ProvisionServerRequest": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string",
                    "example": "my-app-server"
                },
                "region": {
                    "type": "string",
                    "example": "us-east-1"
                },
                "type": {
                    "type": "string",
                    "example": "t2.micro"
                }
            }
        },
        "go-virtual-server_internal_models.ServerActionRequest": {
            "type": "object",
            "properties": {
                "action": {
                    "description": "start, stop, reboot, terminate",
                    "type": "string",
                    "example": "start"
                }
            }
        },
        "go-virtual-server_internal_models.ServerLifecycleLogEntry": {
            "type": "object",
            "properties": {
                "ACTION": {
                    "type": "string"
                },
                "REQUEST_ID": {
                    "type": "string"
                },
                "SERVER_ID": {
                    "type": "string"
                },
                "TIME": {
                    "type": "string"
                }
            }
        },
        "go-virtual-server_internal_models.ServerLogsResponse": {
            "type": "object",
            "properties": {
                "logs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/go-virtual-server_internal_models.ServerLifecycleLogEntry"
                    }
                }
            }
        },
        "go-virtual-server_internal_models.ServerResponse": {
            "type": "object",
            "properties": {
                "billingInfo": {
                    "$ref": "#/definitions/go-virtual-server_internal_models.BillingInfo"
                },
                "createdAt": {
                    "type": "string",
                    "example": "2023-10-27T09:55:00Z"
                },
                "hourlyCost": {
                    "type": "number",
                    "example": 0.01
                },
                "id": {
                    "type": "string",
                    "example": "a1b2c3d4-e5f6-7890-1234-567890abcdef"
                },
                "ipAddress": {
                    "type": "string",
                    "example": "192.168.1.10"
                },
                "lastStatusUpdate": {
                    "type": "string",
                    "example": "2023-10-27T10:15:00Z"
                },
                "lifecycleLogs": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "name": {
                    "type": "string",
                    "example": "my-app-server"
                },
                "provisionedAt": {
                    "type": "string",
                    "example": "2023-10-27T10:00:00Z"
                },
                "region": {
                    "type": "string",
                    "example": "us-east-1"
                },
                "status": {
                    "type": "string",
                    "example": "running"
                },
                "type": {
                    "type": "string",
                    "example": "t2.micro"
                },
                "updatedAt": {
                    "type": "string",
                    "example": "2023-10-27T10:15:00Z"
                },
                "uptimeSeconds": {
                    "type": "integer",
                    "example": 900
                }
            }
        },
        "go-virtual-server_internal_util.ErrorResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "message": {
                    "type": "string"
                }
            }
        }
    }
}